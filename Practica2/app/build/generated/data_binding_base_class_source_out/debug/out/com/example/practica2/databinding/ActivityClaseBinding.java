// Generated by view binder compiler. Do not edit!
package com.example.practica2.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.constraint.ConstraintLayout;
import android.support.design.widget.FloatingActionButton;
import android.support.v7.widget.AppCompatSpinner;
import android.support.v7.widget.Toolbar;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.viewbinding.ViewBindings;
import android.widget.EditText;
import android.widget.TextView;
import com.example.practica2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityClaseBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatSpinner diaSemanaSpinnerClase;

  @NonNull
  public final EditText editTextDescripcionClase;

  @NonNull
  public final TextView editTextHoraFinClase;

  @NonNull
  public final TextView editTextHoraInicioClase;

  @NonNull
  public final EditText editTextNameClase;

  @NonNull
  public final FloatingActionButton floatingActionButtonClaseBack;

  @NonNull
  public final FloatingActionButton floatingActionButtonClaseDelete;

  @NonNull
  public final FloatingActionButton floatingActionButtonClaseSave;

  @NonNull
  public final Toolbar toolbarClase;

  @NonNull
  public final TextView tvDiaSemana;

  @NonNull
  public final TextView tvHoraFin;

  @NonNull
  public final TextView tvHoraInicio;

  private ActivityClaseBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatSpinner diaSemanaSpinnerClase, @NonNull EditText editTextDescripcionClase,
      @NonNull TextView editTextHoraFinClase, @NonNull TextView editTextHoraInicioClase,
      @NonNull EditText editTextNameClase,
      @NonNull FloatingActionButton floatingActionButtonClaseBack,
      @NonNull FloatingActionButton floatingActionButtonClaseDelete,
      @NonNull FloatingActionButton floatingActionButtonClaseSave, @NonNull Toolbar toolbarClase,
      @NonNull TextView tvDiaSemana, @NonNull TextView tvHoraFin, @NonNull TextView tvHoraInicio) {
    this.rootView = rootView;
    this.diaSemanaSpinnerClase = diaSemanaSpinnerClase;
    this.editTextDescripcionClase = editTextDescripcionClase;
    this.editTextHoraFinClase = editTextHoraFinClase;
    this.editTextHoraInicioClase = editTextHoraInicioClase;
    this.editTextNameClase = editTextNameClase;
    this.floatingActionButtonClaseBack = floatingActionButtonClaseBack;
    this.floatingActionButtonClaseDelete = floatingActionButtonClaseDelete;
    this.floatingActionButtonClaseSave = floatingActionButtonClaseSave;
    this.toolbarClase = toolbarClase;
    this.tvDiaSemana = tvDiaSemana;
    this.tvHoraFin = tvHoraFin;
    this.tvHoraInicio = tvHoraInicio;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityClaseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityClaseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_clase, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityClaseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.diaSemanaSpinnerClase;
      AppCompatSpinner diaSemanaSpinnerClase = ViewBindings.findChildViewById(rootView, id);
      if (diaSemanaSpinnerClase == null) {
        break missingId;
      }

      id = R.id.editTextDescripcionClase;
      EditText editTextDescripcionClase = ViewBindings.findChildViewById(rootView, id);
      if (editTextDescripcionClase == null) {
        break missingId;
      }

      id = R.id.editTextHoraFinClase;
      TextView editTextHoraFinClase = ViewBindings.findChildViewById(rootView, id);
      if (editTextHoraFinClase == null) {
        break missingId;
      }

      id = R.id.editTextHoraInicioClase;
      TextView editTextHoraInicioClase = ViewBindings.findChildViewById(rootView, id);
      if (editTextHoraInicioClase == null) {
        break missingId;
      }

      id = R.id.editTextNameClase;
      EditText editTextNameClase = ViewBindings.findChildViewById(rootView, id);
      if (editTextNameClase == null) {
        break missingId;
      }

      id = R.id.floatingActionButtonClaseBack;
      FloatingActionButton floatingActionButtonClaseBack = ViewBindings.findChildViewById(rootView, id);
      if (floatingActionButtonClaseBack == null) {
        break missingId;
      }

      id = R.id.floatingActionButtonClaseDelete;
      FloatingActionButton floatingActionButtonClaseDelete = ViewBindings.findChildViewById(rootView, id);
      if (floatingActionButtonClaseDelete == null) {
        break missingId;
      }

      id = R.id.floatingActionButtonClaseSave;
      FloatingActionButton floatingActionButtonClaseSave = ViewBindings.findChildViewById(rootView, id);
      if (floatingActionButtonClaseSave == null) {
        break missingId;
      }

      id = R.id.toolbarClase;
      Toolbar toolbarClase = ViewBindings.findChildViewById(rootView, id);
      if (toolbarClase == null) {
        break missingId;
      }

      id = R.id.tvDiaSemana;
      TextView tvDiaSemana = ViewBindings.findChildViewById(rootView, id);
      if (tvDiaSemana == null) {
        break missingId;
      }

      id = R.id.tvHoraFin;
      TextView tvHoraFin = ViewBindings.findChildViewById(rootView, id);
      if (tvHoraFin == null) {
        break missingId;
      }

      id = R.id.tvHoraInicio;
      TextView tvHoraInicio = ViewBindings.findChildViewById(rootView, id);
      if (tvHoraInicio == null) {
        break missingId;
      }

      return new ActivityClaseBinding((ConstraintLayout) rootView, diaSemanaSpinnerClase,
          editTextDescripcionClase, editTextHoraFinClase, editTextHoraInicioClase,
          editTextNameClase, floatingActionButtonClaseBack, floatingActionButtonClaseDelete,
          floatingActionButtonClaseSave, toolbarClase, tvDiaSemana, tvHoraFin, tvHoraInicio);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
