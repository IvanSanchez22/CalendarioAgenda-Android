// Generated by view binder compiler. Do not edit!
package com.example.practica2.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.constraint.ConstraintLayout;
import android.support.v7.widget.Toolbar;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.viewbinding.ViewBindings;
import android.widget.Button;
import com.example.practica2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySemanaBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button Domingo;

  @NonNull
  public final Button Jueves;

  @NonNull
  public final Button Lunes;

  @NonNull
  public final Button Martes;

  @NonNull
  public final Button Miercoles;

  @NonNull
  public final Button Sabado;

  @NonNull
  public final Button Viernes;

  @NonNull
  public final Toolbar toolbarSemana;

  private ActivitySemanaBinding(@NonNull ConstraintLayout rootView, @NonNull Button Domingo,
      @NonNull Button Jueves, @NonNull Button Lunes, @NonNull Button Martes,
      @NonNull Button Miercoles, @NonNull Button Sabado, @NonNull Button Viernes,
      @NonNull Toolbar toolbarSemana) {
    this.rootView = rootView;
    this.Domingo = Domingo;
    this.Jueves = Jueves;
    this.Lunes = Lunes;
    this.Martes = Martes;
    this.Miercoles = Miercoles;
    this.Sabado = Sabado;
    this.Viernes = Viernes;
    this.toolbarSemana = toolbarSemana;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySemanaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySemanaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_semana, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySemanaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Domingo;
      Button Domingo = ViewBindings.findChildViewById(rootView, id);
      if (Domingo == null) {
        break missingId;
      }

      id = R.id.Jueves;
      Button Jueves = ViewBindings.findChildViewById(rootView, id);
      if (Jueves == null) {
        break missingId;
      }

      id = R.id.Lunes;
      Button Lunes = ViewBindings.findChildViewById(rootView, id);
      if (Lunes == null) {
        break missingId;
      }

      id = R.id.Martes;
      Button Martes = ViewBindings.findChildViewById(rootView, id);
      if (Martes == null) {
        break missingId;
      }

      id = R.id.Miercoles;
      Button Miercoles = ViewBindings.findChildViewById(rootView, id);
      if (Miercoles == null) {
        break missingId;
      }

      id = R.id.Sabado;
      Button Sabado = ViewBindings.findChildViewById(rootView, id);
      if (Sabado == null) {
        break missingId;
      }

      id = R.id.Viernes;
      Button Viernes = ViewBindings.findChildViewById(rootView, id);
      if (Viernes == null) {
        break missingId;
      }

      id = R.id.toolbarSemana;
      Toolbar toolbarSemana = ViewBindings.findChildViewById(rootView, id);
      if (toolbarSemana == null) {
        break missingId;
      }

      return new ActivitySemanaBinding((ConstraintLayout) rootView, Domingo, Jueves, Lunes, Martes,
          Miercoles, Sabado, Viernes, toolbarSemana);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
