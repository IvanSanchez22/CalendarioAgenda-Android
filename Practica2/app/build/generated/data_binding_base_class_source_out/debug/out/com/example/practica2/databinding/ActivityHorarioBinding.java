// Generated by view binder compiler. Do not edit!
package com.example.practica2.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.constraint.ConstraintLayout;
import android.support.design.widget.FloatingActionButton;
import android.support.v7.widget.Toolbar;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.viewbinding.ViewBindings;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import com.example.practica2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHorarioBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FloatingActionButton floatingActionButtonHorarioActualizarCalendario;

  @NonNull
  public final FloatingActionButton floatingActionButtonHorarioAnadirClase;

  @NonNull
  public final ScrollView scrollViewHorario;

  @NonNull
  public final LinearLayout scrollViewHorarioGeneralLinearLayout;

  @NonNull
  public final LinearLayout scrollViewHorarioHorizontalLinearLayout;

  @NonNull
  public final LinearLayout scrollViewHorarioVerticalLinearLayout;

  @NonNull
  public final Toolbar toolbarHorario;

  @NonNull
  public final TextView tvPickerFechaFinHorario;

  @NonNull
  public final TextView tvPickerFechaInicioHorario;

  private ActivityHorarioBinding(@NonNull ConstraintLayout rootView,
      @NonNull FloatingActionButton floatingActionButtonHorarioActualizarCalendario,
      @NonNull FloatingActionButton floatingActionButtonHorarioAnadirClase,
      @NonNull ScrollView scrollViewHorario,
      @NonNull LinearLayout scrollViewHorarioGeneralLinearLayout,
      @NonNull LinearLayout scrollViewHorarioHorizontalLinearLayout,
      @NonNull LinearLayout scrollViewHorarioVerticalLinearLayout, @NonNull Toolbar toolbarHorario,
      @NonNull TextView tvPickerFechaFinHorario, @NonNull TextView tvPickerFechaInicioHorario) {
    this.rootView = rootView;
    this.floatingActionButtonHorarioActualizarCalendario = floatingActionButtonHorarioActualizarCalendario;
    this.floatingActionButtonHorarioAnadirClase = floatingActionButtonHorarioAnadirClase;
    this.scrollViewHorario = scrollViewHorario;
    this.scrollViewHorarioGeneralLinearLayout = scrollViewHorarioGeneralLinearLayout;
    this.scrollViewHorarioHorizontalLinearLayout = scrollViewHorarioHorizontalLinearLayout;
    this.scrollViewHorarioVerticalLinearLayout = scrollViewHorarioVerticalLinearLayout;
    this.toolbarHorario = toolbarHorario;
    this.tvPickerFechaFinHorario = tvPickerFechaFinHorario;
    this.tvPickerFechaInicioHorario = tvPickerFechaInicioHorario;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHorarioBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHorarioBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_horario, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHorarioBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.floatingActionButtonHorarioActualizarCalendario;
      FloatingActionButton floatingActionButtonHorarioActualizarCalendario = ViewBindings.findChildViewById(rootView, id);
      if (floatingActionButtonHorarioActualizarCalendario == null) {
        break missingId;
      }

      id = R.id.floatingActionButtonHorarioAnadirClase;
      FloatingActionButton floatingActionButtonHorarioAnadirClase = ViewBindings.findChildViewById(rootView, id);
      if (floatingActionButtonHorarioAnadirClase == null) {
        break missingId;
      }

      id = R.id.scroll_view_horario;
      ScrollView scrollViewHorario = ViewBindings.findChildViewById(rootView, id);
      if (scrollViewHorario == null) {
        break missingId;
      }

      id = R.id.scroll_view_horario_general_linear_layout;
      LinearLayout scrollViewHorarioGeneralLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (scrollViewHorarioGeneralLinearLayout == null) {
        break missingId;
      }

      id = R.id.scroll_view_horario_horizontal_linear_layout;
      LinearLayout scrollViewHorarioHorizontalLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (scrollViewHorarioHorizontalLinearLayout == null) {
        break missingId;
      }

      id = R.id.scroll_view_horario_vertical_linear_layout;
      LinearLayout scrollViewHorarioVerticalLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (scrollViewHorarioVerticalLinearLayout == null) {
        break missingId;
      }

      id = R.id.toolbarHorario;
      Toolbar toolbarHorario = ViewBindings.findChildViewById(rootView, id);
      if (toolbarHorario == null) {
        break missingId;
      }

      id = R.id.tvPickerFechaFinHorario;
      TextView tvPickerFechaFinHorario = ViewBindings.findChildViewById(rootView, id);
      if (tvPickerFechaFinHorario == null) {
        break missingId;
      }

      id = R.id.tvPickerFechaInicioHorario;
      TextView tvPickerFechaInicioHorario = ViewBindings.findChildViewById(rootView, id);
      if (tvPickerFechaInicioHorario == null) {
        break missingId;
      }

      return new ActivityHorarioBinding((ConstraintLayout) rootView,
          floatingActionButtonHorarioActualizarCalendario, floatingActionButtonHorarioAnadirClase,
          scrollViewHorario, scrollViewHorarioGeneralLinearLayout,
          scrollViewHorarioHorizontalLinearLayout, scrollViewHorarioVerticalLinearLayout,
          toolbarHorario, tvPickerFechaFinHorario, tvPickerFechaInicioHorario);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
